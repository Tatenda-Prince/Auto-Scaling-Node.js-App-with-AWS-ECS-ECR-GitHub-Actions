name: Deploy to AWS ECS

on:
  push:
    branches:
      - master  # Trigger on push to master

jobs:
  deploy:
    name: Build, Push, and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Verify Dockerfile exists
        run: |
          if [ ! -f app/Dockerfile ]; then
            echo " Dockerfile missing! Exiting..."
            exit 1
          fi

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your AWS region

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_URI: ${{ secrets.ECR_URI }}
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t $ECR_URI:$IMAGE_TAG -f app/Dockerfile app/
          docker push $ECR_URI:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Register New ECS Task Definition
        id: task-def
        env:
          TASK_FAMILY: ${{ secrets.TASK_FAMILY }}  # Set this in GitHub Secrets
        run: |
          # Fetch the latest task definition JSON
          aws ecs describe-task-definition --task-definition $TASK_FAMILY --query taskDefinition > task-def.json
          
          # Remove unnecessary fields
          jq 'del(.taskDefinitionArn, .requiresAttributes, .compatibilities, .revision, .status, .registeredAt, .registeredBy)' task-def.json > new-task-def.json
          
          # Update the container image in the task definition
          jq --arg IMAGE_URI "${{ secrets.ECR_URI }}:$IMAGE_TAG" '.containerDefinitions[0].image = $IMAGE_URI' new-task-def.json > updated-task-def.json
          
          # Register the new task definition
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://updated-task-def.json --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Deploy Updated Task Definition to ECS
        env:
          ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}  # Set this in GitHub Secrets
          ECS_SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}  # Set this in GitHub Secrets
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER_NAME \
            --service $ECS_SERVICE_NAME \
            --task-definition $NEW_TASK_DEF_ARN \
            --force-new-deployment
